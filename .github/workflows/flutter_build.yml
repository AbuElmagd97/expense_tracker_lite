name: Build and Upload Expense Tracker APK

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build APK 🛠️
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Default GitHub token or your own secret token
    steps:
      - name: Checkout Repository 🚀
        uses: actions/checkout@v4

      - name: Set up Java 17 🧑‍💻
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Flutter 🔧
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - name: Install Dependencies 📦
        run: flutter pub get

      - name: Build APK for Default Flavor 📲
        run: flutter build apk --release --no-tree-shake-icons

      - name: Upload APK as Artifact 📤
        uses: actions/upload-artifact@v4
        with:
          name: expense-tracker-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create Release and Upload APK
    needs: build
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}  # You must set GH_TOKEN in your repo secrets
    steps:
      - name: Checkout Repository 🚀
        uses: actions/checkout@v4

      - name: Download APK Artifact 📥
        uses: actions/download-artifact@v4
        with:
          name: expense-tracker-apk
          path: downloaded-apk

      - name: Authenticate GitHub CLI with GH_TOKEN
        run: echo ${{ secrets.GH_TOKEN }} | gh auth login --with-token

      - name: Extract Commit Messages and Create Changelog 📜
        id: changelog
        run: |
          changelog=$(git log $(git describe --tags --abbrev=0)..HEAD --oneline --no-merges)
          if [ -z "$changelog" ]; then
            changelog="No changes"
          fi
          echo "$changelog" > changelog.txt
          cat changelog.txt

      - name: Create GitHub Release with APK
        id: create_release
        run: |
          VERSION_TAG="v$(date +'%Y%m%d%H%M%S')"
          changelog=$(cat changelog.txt)
          gh release create $VERSION_TAG downloaded-apk/app-release.apk --title "Expense Tracker APK Release" --notes "$changelog"

      - name: Clean up
        run: |
          rm -rf downloaded-apk changelog.txt
